/*
 * Cielo24
 *
 * The cielo24 Web Services Platform API allows developers to easily integrate transcription, captioning and keyword extraction into their applications without having to use a manual web portal.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: devs@cielo24.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = cielo24.Client.OpenAPIDateConverter;

namespace cielo24.Model
{
    /// <summary>
    /// PerformTranscriptionBody
    /// </summary>
    [DataContract(Name = "PerformTranscriptionBody")]
    public partial class PerformTranscriptionBody : IEquatable<PerformTranscriptionBody>, IValidatableObject
    {
        /// <summary>
        /// The desired fidelity of the transcription
        /// </summary>
        /// <value>The desired fidelity of the transcription</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum TranscriptionFidelityEnum
        {
            /// <summary>
            /// Enum MECHANICAL for value: MECHANICAL
            /// </summary>
            [EnumMember(Value = "MECHANICAL")]
            MECHANICAL = 1,

            /// <summary>
            /// Enum PREMIUM for value: PREMIUM
            /// </summary>
            [EnumMember(Value = "PREMIUM")]
            PREMIUM = 2,

            /// <summary>
            /// Enum PROFESSIONAL for value: PROFESSIONAL
            /// </summary>
            [EnumMember(Value = "PROFESSIONAL")]
            PROFESSIONAL = 3

        }


        /// <summary>
        /// The desired fidelity of the transcription
        /// </summary>
        /// <value>The desired fidelity of the transcription</value>
        [DataMember(Name = "transcription_fidelity", IsRequired = true, EmitDefaultValue = false)]
        public TranscriptionFidelityEnum TranscriptionFidelity { get; set; }
        /// <summary>
        /// The desired priority of the transcription
        /// </summary>
        /// <value>The desired priority of the transcription</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum PriorityEnum
        {
            /// <summary>
            /// Enum STANDARD for value: STANDARD
            /// </summary>
            [EnumMember(Value = "STANDARD")]
            STANDARD = 1,

            /// <summary>
            /// Enum PRIORITY for value: PRIORITY
            /// </summary>
            [EnumMember(Value = "PRIORITY")]
            PRIORITY = 2

        }


        /// <summary>
        /// The desired priority of the transcription
        /// </summary>
        /// <value>The desired priority of the transcription</value>
        [DataMember(Name = "priority", IsRequired = true, EmitDefaultValue = false)]
        public PriorityEnum Priority { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="PerformTranscriptionBody" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected PerformTranscriptionBody() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="PerformTranscriptionBody" /> class.
        /// </summary>
        /// <param name="jobId">The ID of the job (required).</param>
        /// <param name="transcriptionFidelity">The desired fidelity of the transcription (required).</param>
        /// <param name="priority">The desired priority of the transcription (required).</param>
        /// <param name="callbackUrl">A URL with query string which will be called on completion. If submitting the callback_url as a query string parameter, rather than a value in the POST data, the callback_url should be URL encoded. The callback URL can contain tags that will be replaced with job specific data when the callback is called. Below is the list of tags that are supported: {job_id}, {job_name}, {elementlist_version}, {iwp_name} (The Interim Work Product name associated with this ElementList version).</param>
        /// <param name="options">A job options json. See JobOptions object for details..</param>
        /// <param name="targetLanguage">An RFC 5646 language code to translate this job into. If not specified, then no translation will be performed. If specified, but the language code specified matches the language code on the job request, then no translation will be performed..</param>
        /// <param name="turnaroundHours">The number of hours after submission that the job will be returned. If not specified, it will be set to a default based on the value of the priority parameter. The defaults are 24 and 48 for the PRIORITY and STANDARD priorities respectively. If you request a smaller number of hours than the default for the priority you have selected, the priority will be automatically changed. For example if you request a turnaround_hours of 16 with a priority of STANDARD, the priority will be automatically, and silently, changed to PRIORITY..</param>
        public PerformTranscriptionBody(string jobId = default(string), TranscriptionFidelityEnum transcriptionFidelity = default(TranscriptionFidelityEnum), PriorityEnum priority = default(PriorityEnum), string callbackUrl = default(string), string options = default(string), string targetLanguage = default(string), int turnaroundHours = default(int))
        {
            // to ensure "jobId" is required (not null)
            if (jobId == null)
            {
                throw new ArgumentNullException("jobId is a required property for PerformTranscriptionBody and cannot be null");
            }
            this.JobId = jobId;
            this.TranscriptionFidelity = transcriptionFidelity;
            this.Priority = priority;
            this.CallbackUrl = callbackUrl;
            this.Options = options;
            this.TargetLanguage = targetLanguage;
            this.TurnaroundHours = turnaroundHours;
        }

        /// <summary>
        /// The ID of the job
        /// </summary>
        /// <value>The ID of the job</value>
        [DataMember(Name = "job_id", IsRequired = true, EmitDefaultValue = false)]
        public string JobId { get; set; }

        /// <summary>
        /// A URL with query string which will be called on completion. If submitting the callback_url as a query string parameter, rather than a value in the POST data, the callback_url should be URL encoded. The callback URL can contain tags that will be replaced with job specific data when the callback is called. Below is the list of tags that are supported: {job_id}, {job_name}, {elementlist_version}, {iwp_name} (The Interim Work Product name associated with this ElementList version)
        /// </summary>
        /// <value>A URL with query string which will be called on completion. If submitting the callback_url as a query string parameter, rather than a value in the POST data, the callback_url should be URL encoded. The callback URL can contain tags that will be replaced with job specific data when the callback is called. Below is the list of tags that are supported: {job_id}, {job_name}, {elementlist_version}, {iwp_name} (The Interim Work Product name associated with this ElementList version)</value>
        [DataMember(Name = "callback_url", EmitDefaultValue = false)]
        public string CallbackUrl { get; set; }

        /// <summary>
        /// A job options json. See JobOptions object for details.
        /// </summary>
        /// <value>A job options json. See JobOptions object for details.</value>
        [DataMember(Name = "options", EmitDefaultValue = false)]
        public string Options { get; set; }

        /// <summary>
        /// An RFC 5646 language code to translate this job into. If not specified, then no translation will be performed. If specified, but the language code specified matches the language code on the job request, then no translation will be performed.
        /// </summary>
        /// <value>An RFC 5646 language code to translate this job into. If not specified, then no translation will be performed. If specified, but the language code specified matches the language code on the job request, then no translation will be performed.</value>
        [DataMember(Name = "target_language", EmitDefaultValue = false)]
        public string TargetLanguage { get; set; }

        /// <summary>
        /// The number of hours after submission that the job will be returned. If not specified, it will be set to a default based on the value of the priority parameter. The defaults are 24 and 48 for the PRIORITY and STANDARD priorities respectively. If you request a smaller number of hours than the default for the priority you have selected, the priority will be automatically changed. For example if you request a turnaround_hours of 16 with a priority of STANDARD, the priority will be automatically, and silently, changed to PRIORITY.
        /// </summary>
        /// <value>The number of hours after submission that the job will be returned. If not specified, it will be set to a default based on the value of the priority parameter. The defaults are 24 and 48 for the PRIORITY and STANDARD priorities respectively. If you request a smaller number of hours than the default for the priority you have selected, the priority will be automatically changed. For example if you request a turnaround_hours of 16 with a priority of STANDARD, the priority will be automatically, and silently, changed to PRIORITY.</value>
        [DataMember(Name = "turnaround_hours", EmitDefaultValue = false)]
        public int TurnaroundHours { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class PerformTranscriptionBody {\n");
            sb.Append("  JobId: ").Append(JobId).Append("\n");
            sb.Append("  TranscriptionFidelity: ").Append(TranscriptionFidelity).Append("\n");
            sb.Append("  Priority: ").Append(Priority).Append("\n");
            sb.Append("  CallbackUrl: ").Append(CallbackUrl).Append("\n");
            sb.Append("  Options: ").Append(Options).Append("\n");
            sb.Append("  TargetLanguage: ").Append(TargetLanguage).Append("\n");
            sb.Append("  TurnaroundHours: ").Append(TurnaroundHours).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as PerformTranscriptionBody);
        }

        /// <summary>
        /// Returns true if PerformTranscriptionBody instances are equal
        /// </summary>
        /// <param name="input">Instance of PerformTranscriptionBody to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(PerformTranscriptionBody input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.JobId == input.JobId ||
                    (this.JobId != null &&
                    this.JobId.Equals(input.JobId))
                ) && 
                (
                    this.TranscriptionFidelity == input.TranscriptionFidelity ||
                    this.TranscriptionFidelity.Equals(input.TranscriptionFidelity)
                ) && 
                (
                    this.Priority == input.Priority ||
                    this.Priority.Equals(input.Priority)
                ) && 
                (
                    this.CallbackUrl == input.CallbackUrl ||
                    (this.CallbackUrl != null &&
                    this.CallbackUrl.Equals(input.CallbackUrl))
                ) && 
                (
                    this.Options == input.Options ||
                    (this.Options != null &&
                    this.Options.Equals(input.Options))
                ) && 
                (
                    this.TargetLanguage == input.TargetLanguage ||
                    (this.TargetLanguage != null &&
                    this.TargetLanguage.Equals(input.TargetLanguage))
                ) && 
                (
                    this.TurnaroundHours == input.TurnaroundHours ||
                    this.TurnaroundHours.Equals(input.TurnaroundHours)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.JobId != null)
                {
                    hashCode = (hashCode * 59) + this.JobId.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.TranscriptionFidelity.GetHashCode();
                hashCode = (hashCode * 59) + this.Priority.GetHashCode();
                if (this.CallbackUrl != null)
                {
                    hashCode = (hashCode * 59) + this.CallbackUrl.GetHashCode();
                }
                if (this.Options != null)
                {
                    hashCode = (hashCode * 59) + this.Options.GetHashCode();
                }
                if (this.TargetLanguage != null)
                {
                    hashCode = (hashCode * 59) + this.TargetLanguage.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.TurnaroundHours.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}

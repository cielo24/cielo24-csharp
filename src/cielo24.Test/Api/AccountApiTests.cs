/*
 * Cielo24
 *
 * The cielo24 Web Services Platform API allows developers to easily integrate transcription, captioning and keyword extraction into their applications without having to use a manual web portal.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: devs@cielo24.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using cielo24.Client;
using cielo24.Api;
// uncomment below to import models
//using cielo24.Model;

namespace cielo24.Test.Api
{
    /// <summary>
    ///  Class for testing AccountApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class AccountApiTests : IDisposable
    {
        private AccountApi instance;

        public AccountApiTests()
        {
            instance = new AccountApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of AccountApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' AccountApi
            //Assert.IsType<AccountApi>(instance);
        }

        /// <summary>
        /// Test GetSettings
        /// </summary>
        [Fact]
        public void GetSettingsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int v = null;
            //var response = instance.GetSettings(v);
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test Login
        /// </summary>
        [Fact]
        public void LoginTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int v = null;
            //LoginBody loginBody = null;
            //var response = instance.Login(v, loginBody);
            //Assert.IsType<LoginResponse>(response);
        }

        /// <summary>
        /// Test Logout
        /// </summary>
        [Fact]
        public void LogoutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int v = null;
            //instance.Logout(v);
        }

        /// <summary>
        /// Test VerifyKey
        /// </summary>
        [Fact]
        public void VerifyKeyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int v = null;
            //var response = instance.VerifyKey(v);
            //Assert.IsType<VerifyKeyResponse>(response);
        }
    }
}
